{"remainingRequest":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/src/views/curso/Tema1.vue?vue&type=template&id=36601a69&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/src/views/curso/Tema1.vue","mtime":1740331931421},{"path":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Responsabilidad_Social_Empresarial/U2_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOicxLiBSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVtcHJlc2FyaWFsIChSU0UpIGVzdHJhdMOpZ2ljYSd9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb250YWluZXIgdGFyamV0YSB0YXJqZXRhLS1ibGFuY2EgcC00IHAtbWQtNSBvdmVyZmxvdy1oaWRkZW4ifSxbX3ZtLl9tKDApLF92bS5fbSgxKSxfdm0uX20oMiksX3ZtLl9tKDMpLF9jKCdwJyxbX3ZtLl92KCJMYSBpbnRlZ3JhY2nDs24gZGUgbGEgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBFbXByZXNhcmlhbCAoUlNFKSBlbiBsYSB2aXNpw7NuIHkgbWlzacOzbiBjb3Jwb3JhdGl2YSBlcyBjbGF2ZSBwYXJhIGFsaW5lYXIgbG9zIG9iamV0aXZvcyBlbXByZXNhcmlhbGVzIGNvbiB1biBjb21wcm9taXNvIGdlbnVpbm8gaGFjaWEgZWwgYmllbmVzdGFyIHNvY2lhbCB5IGFtYmllbnRhbC4gRXN0ZSBlbmZvcXVlIHBlcm1pdGUgcXVlIGxhcyBlbXByZXNhcyB0cmFzY2llbmRhbiBlbCBsdWNybywgcHJvbW92aWVuZG8gcHLDoWN0aWNhcyDDqXRpY2FzIHkgc29zdGVuaWJsZXMgcXVlIGJlbmVmaWNpZW4gdGFudG8gYSBsYSBzb2NpZWRhZCBjb21vIGFsIG1lZGlvIGFtYmllbnRlLiIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIkxvcyBiZW5lZmljaW9zIGRlIGxhIGludGVncmFjacOzbiBkZSBsYSBSU0Ugc29uOiAiKV0pLF92bS5fbSg0KSxfYygnaDInLHtzdGF0aWNDbGFzczoibWItMyIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtcmlnaHQifX0sW192bS5fdigiRWplbXBsbyBkZXN0YWNhZG86IENyZXBlcyAmIFdhZmZsZXMiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTUifSxbX3ZtLl92KCJFc3RhIGVtcHJlc2EgY29sb21iaWFuYSBlcyB1biByZWZlcmVudGUgZW4gbGEgaW50ZWdyYWNpw7NuIGRlIGxhIFJTRSBlbiBzdSBtb2RlbG8gZGUgbmVnb2NpbzoiKV0pLF92bS5fbSg1KSxfdm0uX20oNiksX3ZtLl9tKDcpLF92bS5fbSg4KSxfYygncCcsW192bS5fdigiTGEgaW1wbGVtZW50YWNpw7NuIGRlIGxhIFJlc3BvbnNhYmlsaWRhZCBTb2NpYWwgRW1wcmVzYXJpYWwgKFJTRSkgZ2VuZXJhIGltcGFjdG9zIHBvc2l0aXZvcyB0YW50byBwYXJhIGxhcyBlbXByZXNhcyBjb21vIHBhcmEgbGFzIGNvbXVuaWRhZGVzIGVuIGxhcyBxdWUgZXN0YXMgb3BlcmFuLiBFc3RlIGVuZm9xdWUgcGVybWl0ZSBhIGxhcyBvcmdhbml6YWNpb25lcyBubyBzb2xvIGZvcnRhbGVjZXIgc3UgcmVwdXRhY2nDs24geSBjb21wZXRpdGl2aWRhZCwgc2lubyB0YW1iacOpbiBjb250cmlidWlyIGFsIGRlc2Fycm9sbG8gc29zdGVuaWJsZSB5IGFsIGJpZW5lc3RhciBzb2NpYWwuIildKSxfdm0uX20oOSksX3ZtLl9tKDEwKSxfYygnaDInLHtzdGF0aWNDbGFzczoibWItMyIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtcmlnaHQifX0sW192bS5fdigiQmVuZWZpY2lvcyBwYXJhIGxhIGVtcHJlc2EiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTUifSxbX3ZtLl92KCJMYSBpbXBsZW1lbnRhY2nDs24gZGUgcG9sw610aWNhcyBkZSBSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVtcHJlc2FyaWFsIChSU0UpIG9mcmVjZSBudW1lcm9zb3MgYmVuZWZpY2lvcyBwYXJhIGxhcyBvcmdhbml6YWNpb25lcywgZm9ydGFsZWNpZW5kbyB0YW50byBzdSBwb3NpY2lvbmFtaWVudG8gY29tbyBzdSBkZXNlbXBlw7FvLiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoLTIgYmctZm9uZG8tc2xpZGVyIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJwLTQgcC1tZC01In0sW19jKCdTbHlkZXJBJyx7c3RhdGljQ2xhc3M6ImJnLXdoaXRlIixhdHRyczp7InRpcG8iOiJiIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIgcC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01IG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMC5wbmciKX19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygnaDUnLFtfdm0uX3YoIlJlcHV0YWNpw7NuIHkgY29uZmlhbnphIildKSxfYygncCcsW192bS5fdigiTGFzIGVtcHJlc2FzIGNvbiBwb2zDrXRpY2FzIGRlIFJTRSBtZWpvcmFuIHN1IGltYWdlbiBjb3Jwb3JhdGl2YSB5IGdlbmVyYW4gY29uZmlhbnphIGVudHJlIGNvbnN1bWlkb3JlcywgZW1wbGVhZG9zIHkgb3Ryb3MgZ3J1cG9zIGRlIGludGVyw6lzLCB0cmFkdWNpw6luZG9zZSBlbiBtYXlvciBsZWFsdGFkIHkgcHJlZmVyZW5jaWEgcG9yIHBhcnRlIGRlIGxvcyBjbGllbnRlcy4iKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIgcC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01IG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMS5wbmciKX19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygnaDUnLFtfdm0uX3YoIkF0cmFjY2nDs24geSByZXRlbmNpw7NuIGRlIHRhbGVudG8iKV0pLF9jKCdwJyxbX3ZtLl92KCJMYSBSU0UgY29udmllcnRlIGEgbGFzIGVtcHJlc2FzIGVuIGx1Z2FyZXMgYXRyYWN0aXZvcyBwYXJhIHRyYWJhamFyLCBmb21lbnRhbmRvIGVudG9ybm9zIMOpdGljb3MsIGRpdmVyc29zIGUgaW5jbHVzaXZvcywgaW5jcmVtZW50YW5kbyBsYSBzYXRpc2ZhY2Npw7NuIGxhYm9yYWwgeSByZWR1Y2llbmRvIGxhIHJvdGFjacOzbiBkZSBwZXJzb25hbC4iKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIgcC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy01IG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMi5wbmciKX19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyJ9LFtfYygnaDUnLFtfdm0uX3YoIk51ZXZhcyBvcG9ydHVuaWRhZGVzIGRlIG5lZ29jaW8iKV0pLF9jKCdwJyxbX3ZtLl92KCJMYXMgcHLDoWN0aWNhcyByZXNwb25zYWJsZXMgYWJyZW4gbWVyY2Fkb3Mgc29zdGVuaWJsZXMgeSBhbGlhbnphcyBlc3RyYXTDqWdpY2FzIGNvbiBvdHJhcyBvcmdhbml6YWNpb25lcyBjb21wcm9tZXRpZGFzIGNvbiBsYSBSU0UsIGZvcnRhbGVjaWVuZG8gbGFzIG9wb3J0dW5pZGFkZXMgZWNvbsOzbWljYXMuIildKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtY2VudGVyIHAtNCBwLW1kLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTMucG5nIil9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcifSxbX2MoJ2g1JyxbX3ZtLl92KCJFZmljaWVuY2lhIHkgcmVkdWNjacOzbiBkZSByaWVzZ29zIildKSxfYygncCcsW192bS5fdigiTGEgYWRvcGNpw7NuIGRlIHByw6FjdGljYXMgc29zdGVuaWJsZXMgb3B0aW1pemEgZWwgdXNvIGRlIHJlY3Vyc29zLCByZWR1Y2UgY29zdG9zIG9wZXJhdGl2b3MgeSBwcmV2aWVuZSBzYW5jaW9uZXMgeSBkYcOxb3MgcmVwdXRhY2lvbmFsZXMgcmVsYWNpb25hZG9zIGNvbiBpbXBhY3RvcyBuZWdhdGl2b3MuIildKV0pXSldKV0sMSldKSxfYygnaDInLHtzdGF0aWNDbGFzczoibWItMyIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtcmlnaHQifX0sW192bS5fdigiQmVuZWZpY2lvcyBwYXJhIGxhIGNvbXVuaWRhZCIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNSJ9LFtfdm0uX3YoIkxhIFJlc3BvbnNhYmlsaWRhZCBTb2NpYWwgRW1wcmVzYXJpYWwgKFJTRSkgZ2VuZXJhIGJlbmVmaWNpb3Mgc2lnbmlmaWNhdGl2b3MgcGFyYSBsYXMgY29tdW5pZGFkZXMsIHByb21vdmllbmRvIHVuIGRlc2Fycm9sbG8gaW50ZWdyYWwgeSBzb3N0ZW5pYmxlLiAiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1jb2xvci1pbmZvIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJwLTQgcC1tZC01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNiJ9LFtfYygnSW1hZ2VuSW5mb2dyYWZpY2EnLHtzdGF0aWNDbGFzczoiY29sb3Itc2VjdW5kYXJpbyIsc2NvcGVkU2xvdHM6X3ZtLl91KFt7a2V5OiJpbWFnZW4iLGZuOmZ1bmN0aW9uKCl7cmV0dXJuIFtfYygnZmlndXJlJyxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjExMDZweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNC5zdmciKSwiYWx0IjoiIn19KV0pXX0scHJveHk6dHJ1ZX1dKX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBwLTMiLGF0dHJzOnsieCI6IjQuNSUiLCJ5IjoiMTguMyUiLCJudW1lcm8iOiIrIn19LFtfYygnaDUnLFtfdm0uX3YoIkRlc2Fycm9sbG8gZWNvbsOzbWljbyIpXSksX2MoJ3AnLFtfdm0uX3YoIkxhcyBlbXByZXNhcyByZXNwb25zYWJsZXMgZ2VuZXJhbiBlbXBsZW8gZSBpbnZpZXJ0ZW4gZW4gbGFzIGNvbXVuaWRhZGVzIGxvY2FsZXMsIGZvcnRhbGVjaWVuZG8gbGEgZWNvbm9tw61hIHJlZ2lvbmFsIHkgcHJvbW92aWVuZG8gaW5pY2lhdGl2YXMgY29tbyByZWZvcmVzdGFjacOzbiB5IHZvbHVudGFyaWFkbyBjb3Jwb3JhdGl2by4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHAtMyIsYXR0cnM6eyJ4IjoiOTYlIiwieSI6IjcxLjUlIiwibnVtZXJvIjoiKyJ9fSxbX2MoJ2g1JyxbX3ZtLl92KCJDYWxpZGFkIGRlIHZpZGEiKV0pLF9jKCdwJyxbX3ZtLl92KCJBY2Npb25lcyBlbmZvY2FkYXMgZW4gZWR1Y2FjacOzbiwgc2FsdWQgeSBiaWVuZXN0YXIgZ2VuZXJhbCBjb250cmlidXllbiBhIG1lam9yYXIgbGFzIGNvbmRpY2lvbmVzIGRlIHZpZGEgZGUgbGFzIGNvbXVuaWRhZGVzLiBFamVtcGxvOiBQcm9ncmFtYXMgcXVlIGxsZXZhbiBzZXJ2aWNpb3MgYsOhc2ljb3MgYSB6b25hcyB2dWxuZXJhYmxlcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHAtMyIsYXR0cnM6eyJ4IjoiOTYlIiwieSI6IjE4JSIsIm51bWVybyI6IisifX0sW19jKCdoNScsW192bS5fdigiU29zdGVuaWJpbGlkYWQgYW1iaWVudGFsIildKSxfYygncCcsW192bS5fdigiSW5pY2lhdGl2YXMgZW1wcmVzYXJpYWxlcyBlbmZvY2FkYXMgZW4gbGEgcmVkdWNjacOzbiBkZSBlbWlzaW9uZXMsIGdlc3Rpw7NuIGRlIHJlc2lkdW9zIHkgcHJlc2VydmFjacOzbiBkZSByZWN1cnNvcyBuYXR1cmFsZXMgcHJvdGVnZW4gZWwgbWVkaW8gYW1iaWVudGUgeSBnYXJhbnRpemFuIHN1IHNvc3RlbmliaWxpZGFkIHBhcmEgZnV0dXJhcyBnZW5lcmFjaW9uZXMuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBwLTMiLGF0dHJzOnsieCI6IjQlIiwieSI6IjcxLjUlIiwibnVtZXJvIjoiKyJ9fSxbX2MoJ2g1JyxbX3ZtLl92KCJDb2hlc2nDs24gc29jaWFsIildKSxfYygncCcsW192bS5fdigiQWwgcHJvbW92ZXIgdmFsb3JlcyBjb21vIGRpdmVyc2lkYWQsIGVxdWlkYWQgZSBpbmNsdXNpw7NuLCBsYXMgZW1wcmVzYXMgY29udHJpYnV5ZW4gYSBsYSBjb25zdHJ1Y2Npw7NuIGRlIHNvY2llZGFkZXMgbcOhcyBqdXN0YXMgeSBjb2hlc2lvbmFkYXMuIildKV0pXSldLDEpXSldKV0pLF92bS5fbSgxMSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJnLWNvbG9yLTUgbWItbGctNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcC1tZC01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcgb3JkZXItMiJ9LFtfYygnaDInLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW192bS5fdigiRWplbXBsb3MgZGVzdGFjYWRvcyBkZSBpbXBsZW1lbnRhY2nDs24gZW4gbGEgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBFbXByZXNhcmlhbCAoUlNFKSIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtcmlnaHQifX0sW192bS5fdigiRW4gZWwgZG9jdW1lbnRvIHNlIGRlc2NyaWJlbiBlamVtcGxvcyBkZXN0YWNhZG9zIGRlIGltcGxlbWVudGFjacOzbiBkZSBsYSBSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVtcHJlc2FyaWFsIChSU0UpLCByZXNhbHRhbmRvIGPDs21vIGRpdmVyc2FzIGVtcHJlc2FzIGhhbiBpbnRlZ3JhZG8gZXN0cmF0ZWdpYXMgc29zdGVuaWJsZXMgeSBzb2NpYWxtZW50ZSByZXNwb25zYWJsZXMgZW4gc3VzIG9wZXJhY2lvbmVzIildKSxfYygnYScse3N0YXRpY0NsYXNzOiJhbmV4byBtYi00IGJnLXdoaXRlIHctZml0IixhdHRyczp7ImhyZWYiOl92bS5vYnRlbmVyTGluaygnL2Rvd25sb2Fkcy9BbmV4b18xLnBkZicpLCJ0YXJnZXQiOiJfYmxhbmsiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX2ljb25vIixzdHlsZTooeydiYWNrZ3JvdW5kLWNvbG9yJzogJyNGQ0RGREInfSl9LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXBkZi5zdmciKX19KV0pLF92bS5fbSgxMildKV0pLF92bS5fbSgxMyldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJvcmRlci10b3AgY29sb3ItcHJpbWFyaW8ifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJwLTQgcC1tZC01In0sW19jKCdoMicse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTUFURVJJQUwgQ09NUExFTUVOVEFSSU8iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1hdGVyaWFsLWNvbXBsZW1lbnRhcmlvIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC1tZC02IGNvbC1sZy03In0sW19jKCdwJyxbX3ZtLl92KCJMb3MgaW52aXRhbW9zIGEgZXhwbG9yYXIgZWwgbWF0ZXJpYWwgY29tcGxlbWVudGFyaW8gZGUgZXN0ZSBjdXJzbywgZW4gZXN0YSBzZWNjacOzbiBlbmNvbnRyYXLDoSByZWN1cnNvcyBxdWUgbGUgcGVybWl0aXLDoW4gcHJvZnVuZGl6YXIgeSBlbnJpcXVlY2VyIHN1IGFwcmVuZGl6YWplIGVuIGxvcyB0ZW1hcyB0cmF0YWRvcyBlbiBlc3RhIHVuaWRhZC4iKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9sYy90ZWNub2xvZ2ljYWRlbG9yaWVudGUvdGl0dWxvcy8yMjI0ODMiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkd1em3DoW4gVsOhc3F1ZXosIEEuIFRydWppbGxvIETDoXZpbGEsIE0uIEEuICYgR3V6bcOhbiBWw6FzcXVleiwgRC4gKDIwMTkpLiBHZXN0acOzbiBkZSBncnVwb3MgZGUgaW50ZXLDqXMgZXN0cmF0w6lnaWNvczogZ29iaWVybm8gY29ycG9yYXRpdm8geSBlbXBsZWFkb3M6ICgxIGVkLikuIENvbGVnaW8gZGUgRXN0dWRpb3MgU3VwZXJpb3JlcyBkZSBBZG1pbmlzdHJhY2nDs24gLSBDRVNBLiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cubWl0ZXMuZ29iLmVzL2VzL3JzZS9lZXJzZS9pbmRleC5odG0iLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIk1pbmlzdGVyaW8gZGUgVHJhYmFqbyB5IEVjb25vbcOtYSBTb2NpYWwuICgyMDE0KS4gRXN0cmF0ZWdpYSBFc3Bhw7FvbGEgZGUgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBkZSBsYXMgRW1wcmVzYXMuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2ZhY3Rvcmh1bWEub3JnL2VzL2NvbnRlbmlkb3MvdW5pZGFkZXMvMTEyNzEtcmVzcG9uc2FiaWxpZGFkLXNvY2lhbC1lc3RyYXRlZ2ljYS1yc2UiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkZhY3RvciBIdW3DoC4gKDIwMTQpLiBSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVzdHJhdMOpZ2ljYSAoUlNFKS4gIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vcmVzcG9uc2FiaWxpZGFkeXNvc3RlbmliaWxpZGFkLmNvbS9lc3RyYXRlZ2lhcy1kZS1yZXNwb25zYWJpbGlkYWQtc29jaWFsLWNvcnBvcmF0aXZhLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiUmVzcG9uc2FiaWxpZGFkIHkgU29zdGVuaWJpbGlkYWQuICgyMDIxKS4gRXN0cmF0ZWdpYXMgZGUgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBDb3Jwb3JhdGl2YSAoUlNDKS4iKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cuZWxjb2xvbWJpYW5vLmNvbS9uZWdvY2lvcy9lc3Rhcy1zb24tbGFzLWVtcHJlc2FzLWNvbi1tYXlvci1yZXNwb25zYWJpbGlkYWQtc29jaWFsLU1IMTQ3NTk1NjYiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkVsIENvbG9tYmlhbm8uICgyMDIxKS4gRW1wcmVzYXMgY29uIG1heW9yIHJlc3BvbnNhYmlsaWRhZCBzb2NpYWwuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy5kZWxvaXR0ZS5jb20vZXMvZXMvc2VydmljZXMvcmlzay1hZHZpc29yeS9wZXJzcGVjdGl2ZXMvcmVzcG9uc2FiaWxpZGFkLXNvY2lhbC15LWdvYmllcm5vLWNvcnBvcmF0aXZvLmh0bWwiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkRlbG9pdHRlLiAoMjAxNiwgMTIgZGUganVsaW8pLiBSZXNwb25zYWJpbGlkYWQgU29jaWFsIHkgR29iaWVybm8gQ29ycG9yYXRpdm8uICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy5zb2Z0d2FyZWxvZ2lzdGljYXlkaXN0cmlidWNpb24uZXUvbG9naXN0aWNhLWNvbi1yc2UvIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCLCoU1lam9yYW5kbyBsYSBsb2fDrXN0aWNhIGNvbiBSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVtcHJlc2FyaWFsISAocy5mLikuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy5odWZmaW5ndG9ucG9zdC5lcy9lY29ub21pYS9lc2NvbmRlbi1jYWphcy12ZXJkZXMtZnJ1dGEtbWVyY2Fkb25hLXZlcmR1cmEtcnAuaHRtbCIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiSHVmZmluZ3RvbiBQb3N0LiAoMjAyNCwgNSBkZSBzZXB0aWVtYnJlKS4gTG8gcXVlIGVzY29uZGVuIGxhcyBjYWphcyB2ZXJkZXMgZGUgbGEgZnJ1dGEgeSB2ZXJkdXJhIGRlIE1lcmNhZG9uYSB5IGNhc2kgbmluZ8O6biBjbGllbnRlIGltYWdpbmEuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy5ncnVwb2NldGVwLmNsLzIwMjQvMTAvMjgvZ3VpYS1jb21wbGV0YS1zb2JyZS1yZXNwb25zYWJpbGlkYWQtc29jaWFsLWVtcHJlc2FyaWFsLXJzZS1kZWZpbmljaW9uLXRpcG9zLWVzdHJhdGVnaWFzLXktZWplbXBsb3MvIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJHcnVwbyBDZXRlcC4gKDIwMjMsIDI4IGRlIG9jdHVicmUpLiBHdcOtYSBjb21wbGV0YSBzb2JyZSByZXNwb25zYWJpbGlkYWQgc29jaWFsIGVtcHJlc2FyaWFsIChSU0UpOiBEZWZpbmljacOzbiwgdGlwb3MsIGVzdHJhdGVnaWFzIHkgZWplbXBsb3MuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2Zhc3RlcmNhcGl0YWwuY29tL2VzL2NvbnRlbmlkby9WaXNpb24tLUNvbW8tbGEtcmVzcG9uc2FiaWxpZGFkLXNvY2lhbC1jb3Jwb3JhdGl2YS1wdWVkZS1pbnNwaXJhci1zdS12aXNpb24teS1taXNpb24uaHRtbCIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiRmFzdGVyQ2FwaXRhbC4gKDIwMjMpLiBWaXNpw7NuOiBDw7NtbyBsYSByZXNwb25zYWJpbGlkYWQgc29jaWFsIGNvcnBvcmF0aXZhIHB1ZWRlIGluc3BpcmFyIHN1IHZpc2nDs24geSBtaXNpw7NuLiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly90cml1bmZhZW1wcmVuZGllbmRvLmNvbS9jb21vLWJlbmVmaWNpYS1sYS1yZXNwb25zYWJpbGlkYWQtc29jaWFsLWEtbGEtY29tdW5pZGFkLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiVHJpdW5mYSBFbXByZW5kaWVuZG8uIChzLmYuKS4gQmVuZWZpY2lvcyBkZSBsYSByZXNwb25zYWJpbGlkYWQgc29jaWFsIHBhcmEgbGEgY29tdW5pZGFkOiBUb2RvIGxvIHF1ZSBuZWNlc2l0YXMgc2FiZXIuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2VscGFpcy5jb20vYW1lcmljYS1jb2xvbWJpYS9icmFuZGVkL2xvcy1saWRlcmVzLWRlLWNvbG9tYmlhLzIwMjQtMTItMDUvYmVhdHJpei1mZXJuYW5kZXotZWwtY29tcHJvbWlzby1zb2NpYWwtZGV0cmFzLWRlLWxhLWdhc3Ryb25vbWlhLmh0bWwiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkVsIFBhw61zLiAoMjAyNCwgZGljaWVtYnJlIDUpLiBCZWF0cml6IEZlcm7DoW5kZXosIGVsIGNvbXByb21pc28gc29jaWFsIGRldHLDoXMgZGUgbGEgZ2FzdHJvbm9tw61hLiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9jaGF0Z3B0LmNvbS8iLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkNoYXRHUFQiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9jb3BpbG90Lm1pY3Jvc29mdC5jb20vIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJDb3BpbG90IildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUNFeV81WG1mMDNjIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCIgR2VzdGnDs24gRXN0cmF0w6lnaWNhIGRlIGxhIFJlc3BvbnNhYmlsaWRhZCBTb2NpYWwgRW1wcmVzYXJpYWwuIildKV0pXSksX3ZtLl9tKDE0KV0pXSldKV0pXSwxKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItNSBtYi01IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xLnBuZyIpLCJhbHQiOiIifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InAtNCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX3ZtLl92KCJMYSBSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVtcHJlc2FyaWFsIChSU0UpIGVzdHJhdMOpZ2ljYSBzZSBkZWZpbmUgY29tbyBsYSBpbnRlZ3JhY2nDs24gdm9sdW50YXJpYSwgcG9yIHBhcnRlIGRlIGxhcyBlbXByZXNhcywgZGUgcHJlb2N1cGFjaW9uZXMgc29jaWFsZXMgeSBhbWJpZW50YWxlcyBlbiBzdXMgb3BlcmFjaW9uZXMgY29tZXJjaWFsZXMgeSBlbiBzdXMgaW50ZXJhY2Npb25lcyBjb24gbG9zIHN0YWtlaG9sZGVycy4gRXN0ZSBlbmZvcXVlIHBlcm1pdGUgYSBsYXMgb3JnYW5pemFjaW9uZXMgdmluY3VsYXIgc3VzIG9iamV0aXZvcyBlY29uw7NtaWNvcyBjb24gZWwgZGVzYXJyb2xsbyBzb3N0ZW5pYmxlLCBnZW5lcmFuZG8gdmFsb3IgdGFudG8gcGFyYSBsYSBlbXByZXNhIGNvbW8gcGFyYSBsYSBjb211bmlkYWQgZW4gZ2VuZXJhbC4iKV0pXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJnLWZvbmRvLTcgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcHgtbWQtNSBwYi1tZC0zIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTUgYWxpZ24taXRlbXMtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgb3JkZXItMiJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8zLnN2ZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG9yZGVyLTEifSxbX2MoJ3AnLFtfdm0uX3YoIkxhIGltcGxlbWVudGFjacOzbiBkZSB1bmEgZXN0cmF0ZWdpYSBkZSBSU0UgZXN0cmF0w6lnaWNhIGNvbmxsZXZhIGRpdmVyc29zIGJlbmVmaWNpb3MuIFBvciB1biBsYWRvLCBtZWpvcmEgbGEgcmVwdXRhY2nDs24gY29ycG9yYXRpdmEgeSBmb3J0YWxlY2UgbGEgY29uZmlhbnphIGRlIGxvcyBjbGllbnRlcywgbG8gY3VhbCBwdWVkZSB0cmFuc2Zvcm1hcnNlIGVuIHVuYSB2ZW50YWphIGNvbXBldGl0aXZhIGVuIGVsIG1lcmNhZG8uIFBvciBvdHJvIGxhZG8sIGNvbnRyaWJ1eWUgYSBsYSBwcmVzZXJ2YWNpw7NuIGRlbCBtZWRpbyBhbWJpZW50ZSB5IGFsIGJpZW5lc3RhciBzb2NpYWwsIGFzcGVjdG9zIGNhZGEgdmV6IG3DoXMgdmFsb3JhZG9zIHBvciBsb3MgZGlmZXJlbnRlcyBncnVwb3MgZGUgaW50ZXLDqXMuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTEgcC00IG1iLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGFsaWduLWl0ZW1zLXN0YXJ0In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLWF1dG8ifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMi5zdmciKX19KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJMYSBSU0UgZXN0cmF0w6lnaWNhIHByb211ZXZlIGVudG9ybm9zIGxhYm9yYWxlcyBzZWd1cm9zIHkgc2FsdWRhYmxlcyBlbiBlbCDDoW1iaXRvIGRlIGxhIHNlZ3VyaWRhZCB5IHNhbHVkIGVuIGVsIHRyYWJham8sIGZvbWVudGFuZG8gZWwgYmllbmVzdGFyIGRlIGxvcyBlbXBsZWFkb3MgeSwgY29tbyByZXN1bHRhZG8sIGluY3JlbWVudGFuZG8gbGEgcHJvZHVjdGl2aWRhZCB5IGxhIHNhdGlzZmFjY2nDs24gbGFib3JhbC4gQWRlbcOhcywgYWwgY29uc2lkZXJhciBsYXMgY29uc2VjdWVuY2lhcyBzb2NpYWxlcyB5IGFtYmllbnRhbGVzIGRlIHN1cyBvcGVyYWNpb25lcywgbGFzIG9yZ2FuaXphY2lvbmVzIHB1ZWRlbiBhbnRpY2lwYXIgeSBtaXRpZ2FyIHJpZXNnb3MgYXNvY2lhZG9zIGEgbGEgc2FsdWQgb2N1cGFjaW9uYWwgeSBhbCBpbXBhY3RvIGFtYmllbnRhbC4iKV0pXSldKV0pLF9jKCdwJyxbX3ZtLl92KCJMYSAoUlNFKSBlc3RyYXTDqWdpY2EgcmVwcmVzZW50YSB1biBlbmZvcXVlIGludGVncmFsIHF1ZSBjb21iaW5hIGVsIGNyZWNpbWllbnRvIGVjb27Ds21pY28gY29uIGVsIGJpZW5lc3RhciBzb2NpYWwgeSBsYSBzb3N0ZW5pYmlsaWRhZCBhbWJpZW50YWwuIildKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aC0yIGJnLWZvbmRvLXNsaWRlciBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicC00IHAtbWQtNSJ9LFtfYygnZmlndXJlJyxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ2aWRlbyJ9LFtfYygnaWZyYW1lJyx7YXR0cnM6eyJ3aWR0aCI6IjU2MCIsImhlaWdodCI6IjMxNSIsInNyYyI6Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1F6RFVKb1dKQ2c4P3NpPUxOekZzRVN6TWtvU0dWUkQiLCJ0aXRsZSI6IlJlc3BvbnNhYmlsaWRhZCBzb2NpYWwgZW1wcmVzYXJpYWw6IGludGVncmFjacOzbiBkZSBiaWVuZXN0YXIgeSBzb3N0ZW5pYmlsaWRhZCIsImZyYW1lYm9yZGVyIjoiMCIsImFsbG93IjoiYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIsImFsbG93ZnVsbHNjcmVlbiI6IiJ9fSldKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRpdHVsby1zZWd1bmRvIixhdHRyczp7ImlkIjoidF8xXzEiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdoMicsW19jKCdzcGFuJyxbX3ZtLl92KCIxLjEiKV0pLF92bS5fdigiIEludGVncmFjacOzbiBlbiBsYSB2aXNpw7NuIHkgbWlzacOzbiBjb3Jwb3JhdGl2YSIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGggYmctZm9uZG8tNiJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcHgtbWQtNSBwYi1tZC0zIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtc3RyZXRjaCBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmQtMiBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX19pbWFnZSIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzQucG5nIiksImFsdCI6IiJ9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9fdGV4dCBwLTQifSxbX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6Im1iLTIgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJQcm9ww7NzaXRvIGFtcGxpYWRvICIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkFsIGluY2x1aXIgbGEgUlNFIGVuIGRlY2xhcmFjaW9uZXMgZnVuZGFtZW50YWxlcywgbGFzIG9yZ2FuaXphY2lvbmVzIGVzdGFibGVjZW4gdW4gcHJvcMOzc2l0byBxdWUgcHJvbXVldmUgZWwgdmFsb3IgY29tcGFydGlkbywgY29uc29saWRhbmRvIHN1IHJlcHV0YWNpw7NuIHkgcG9zaWNpb25hbWllbnRvLiIpXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi1kb3duIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkLTIgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9faW1hZ2UiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS81LnBuZyIpLCJhbHQiOiIifX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmRfX3RleHQgcC00In0sW19jKCdoNScse3N0YXRpY0NsYXNzOiJtYi0yIHRleHQtY2VudGVyIn0sW192bS5fdigiSW1wYWN0byBlc3RyYXTDqWdpY28iKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJMYSBhbHRhIGRpcmVjY2nDs24gbGlkZXJhIGVsIGNvbXByb21pc28gY29uIGxhIFJTRSwgaW50ZWdyYW5kbyBlc3RvcyB2YWxvcmVzIGVuIGxhIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgeSBlbiBkZWNpc2lvbmVzIGVzdHJhdMOpZ2ljYXMuIildKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG1iLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluLWRvd24ifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmQtMiBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX19pbWFnZSIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzYucG5nIiksImFsdCI6IiJ9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9fdGV4dCBwLTQifSxbX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6Im1iLTIgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJGb2NvIGVuIGdydXBvcyBkZSBpbnRlcsOpcyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkVzIGNydWNpYWwgcHJpb3JpemFyIHRlbWFzIHJlbGV2YW50ZXMgcGFyYSBsb3MgIiksX2MoJ2VtJyxbX3ZtLl92KCJzdGFrZWhvbGRlcnMiKV0pLF92bS5fdigiLCBhc2VndXJhbmRvIHF1ZSBsYXMgaW5pY2lhdGl2YXMgcmVzcG9uZGFuIGEgbGFzIG5lY2VzaWRhZGVzIHNvY2lhbGVzIHkgYW1iaWVudGFsZXMuIildKV0pXSldKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGgtMiBiZy1mb25kby0zIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNCBweC1tZC01IHBiLW1kLTMifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNiBvcmRlci0yIixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygndWwnLHtzdGF0aWNDbGFzczoibGlzdGEtdWwifSxbX2MoJ2xpJyx7c3RhdGljQ2xhc3M6Im1iLTIgZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkNvbXByb21pc28gc29jaWFsOiIpXSksX3ZtLl92KCIgZ2VuZXJhIGVtcGxlbyBwYXJhIG11amVyZXMgY2FiZXphIGRlIGZhbWlsaWEsIHBvc2ljaW9uw6FuZG9zZSBjb21vIGzDrWRlciBlbiByZXNwb25zYWJpbGlkYWQgc29jaWFsLiIpXSldKSxfYygnbGknLHtzdGF0aWNDbGFzczoibWItMiBkLWZsZXgifSxbX2MoJ2knLHtzdGF0aWNDbGFzczoiZmFyIGZhLWFycm93LWFsdC1jaXJjbGUtcmlnaHQifSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiUmVzcHVlc3RhIGFudGUgY3Jpc2lzOiIpXSksX3ZtLl92KCIgZHVyYW50ZSBsYSBwYW5kZW1pYSwgaW1wbGVtZW50w7MgZXN0cmF0ZWdpYXMgcGFyYSBwcm90ZWdlciBlbXBsZW9zIHkgYXBveWFyIGEgY29sYWJvcmFkb3Jlcy4iKV0pXSksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6Im1iLTIgZC1mbGV4In0sW19jKCdpJyx7c3RhdGljQ2xhc3M6ImZhciBmYS1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0In0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX2MoJ2InLFtfdm0uX3YoIkRlc2Fycm9sbG8gc29zdGVuaWJsZToiKV0pLF92bS5fdigiIHRyYWJhamEgY29uIHBlcXVlw7FvcyBwcm9kdWN0b3JlcywgcHJvbW92aWVuZG8gZWwgZGVzYXJyb2xsbyBkZSBjb211bmlkYWRlcyBsb2NhbGVzLiIpXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNiBvcmRlci0xIixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbiJ9fSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWItNCBtYi1sZy0wIixhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNy5zdmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJnLWNvbG9yLTMgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcHgtbWQtNSBweS00In0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJFbCBjYXNvIGRlIENyZXBlcyAmIFdhZmZsZXMgZGVtdWVzdHJhIHF1ZSBpbnRlZ3JhciBsYSBSU0Ugbm8gc29sbyBmb3J0YWxlY2UgbGEgcmVwdXRhY2nDs24gY29ycG9yYXRpdmEsIHNpbm8gcXVlIHRhbWJpw6luIGltcGFjdGEgcG9zaXRpdmFtZW50ZSBlbiBsYSBzb2NpZWRhZCB5IGVsIG1lZGlvIGFtYmllbnRlLCBhbGluZWFuZG8gb2JqZXRpdm9zIGVtcHJlc2FyaWFsZXMgY29uIHByaW5jaXBpb3Mgw6l0aWNvcy4iKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTgifSxbX2MoJ2gyJyx7c3RhdGljQ2xhc3M6Im1iLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXJpZ2h0In19LFtfdm0uX3YoIlJTRSB5IHNlZ3VyaWRhZCB5IHNhbHVkIGVuIGVsIHRyYWJham8iKV0pLF9jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJFbiBlbCDDoW1iaXRvIGRlIGxhIHNlZ3VyaWRhZCB5IHNhbHVkIGVuIGVsIHRyYWJham8sIGxhIGludGVncmFjacOzbiBkZSBsYSBSU0UgZm9tZW50YSBlbnRvcm5vcyBsYWJvcmFsZXMgc2VndXJvcyB5IHNhbHVkYWJsZXMsIHByaW9yaXphbmRvIGVsIGJpZW5lc3RhciBkZSBsb3MgZW1wbGVhZG9zLiBFc3RvIG5vIHNvbG8gbWVqb3JhIGxhIHByb2R1Y3RpdmlkYWQsIHNpbm8gcXVlIHRhbWJpw6luIHJlZnVlcnphIGVsIGNvbXByb21pc28gc29jaWFsIGRlIGxhIGVtcHJlc2EgeSBjb250cmlidXllIGFsIGRlc2Fycm9sbG8gc29zdGVuaWJsZS4iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMiBwLTQgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkxhIGluY2x1c2nDs24gZGUgbGEgUlNFIGVuIGxhIHZpc2nDs24geSBtaXNpw7NuIGNvcnBvcmF0aXZhIGVzIHVuIHBhc28gZXNlbmNpYWwgcGFyYSBlcXVpbGlicmFyIMOpeGl0byBlY29uw7NtaWNvIGNvbiByZXNwb25zYWJpbGlkYWQgc29jaWFsLiBFc3RlIGVuZm9xdWUgbm8gc29sbyBtZWpvcmEgbGEgY29tcGV0aXRpdmlkYWQgeSByZXB1dGFjacOzbiBvcmdhbml6YWNpb25hbCwgc2lubyBxdWUgdGFtYmnDqW4gZ2VuZXJhIHVuIGltcGFjdG8gcG9zaXRpdm8geSBzb3N0ZW5pYmxlIGVuIGxhIHNvY2llZGFkIHkgZWwgbWVkaW8gYW1iaWVudGUuIildKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBkLW5vbmUgZC1zbS1ibG9jayJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtYi00IG1iLWxnLTAiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS84LnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfMiIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuMiIpXSksX3ZtLl92KCIgSW50ZWdyYWNpw7NuIGVuIGxhIHZpc2nDs24geSBtaXNpw7NuIGNvcnBvcmF0aXZhIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLWZpZ3VyYSBtYi00In0sW19jKCdoNScsW192bS5fdigiRmlndXJhIDEuICIpXSksX2MoJ3NwYW4nLFtfdm0uX3YoIkJlbmVmaWNpb3MgcGFyYSBsYSBlbXByZXNhIHkgbGEgY29tdW5pZGFkLiIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01IGp1c3RpZnktY29udGVudC1jZW50ZXIgYmctY29sb3ItNCBweS01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTEyIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzkuc3ZnIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBvcmRlci0yIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzE1LnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG9yZGVyLTEifSxbX2MoJ2gyJyx7c3RhdGljQ2xhc3M6Im1iLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXJpZ2h0In19LFtfdm0uX3YoIkltcGFjdG8gZW4gbGEgc2VndXJpZGFkIHkgc2FsdWQgZW4gZWwgdHJhYmFqbyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNSJ9LFtfdm0uX3YoIkVuIGVzdGUgw6FtYml0bywgbGEgUlNFIGdhcmFudGl6YSBjb25kaWNpb25lcyBsYWJvcmFsZXMgc2VndXJhcyB5IHNhbHVkYWJsZXMsIG1lam9yYW5kbyBsYSBwcm9kdWN0aXZpZGFkIHkgbGEgc2F0aXNmYWNjacOzbiBkZSBsb3MgZW1wbGVhZG9zLCBhbCB0aWVtcG8gcXVlIGNvbnRyaWJ1eWUgYSBsYSBjcmVhY2nDs24gZGUgZW50b3Jub3MgbGFib3JhbGVzIGRpZ25vcyB5IHNlZ3Vyb3MuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTIgcC00IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1zdGFydCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy1hdXRvIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byIsc3RhdGljU3R5bGU6eyJtYXgtd2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzE2LnN2ZyIpfX0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkxhIFJTRSBnZW5lcmEgdW5hIHJlbGFjacOzbiBzaW1iacOzdGljYSBlbnRyZSBlbXByZXNhcyB5IGNvbXVuaWRhZGVzLCBwcm9tb3ZpZW5kbyB1biBkZXNhcnJvbGxvIGVxdWl0YXRpdm8geSBzb3N0ZW5pYmxlLiBFc3RlIGVuZm9xdWUgbm8gc29sbyBiZW5lZmljaWEgYSBsYXMgb3JnYW5pemFjaW9uZXMgYWwgZm9ydGFsZWNlciBzdSByZXB1dGFjacOzbiB5IGNvbXBldGl0aXZpZGFkLCBzaW5vIHF1ZSB0YW1iacOpbiBpbXBhY3RhIHBvc2l0aXZhbWVudGUgZW4gbGEgY2FsaWRhZCBkZSB2aWRhLCBsYSBjb2hlc2nDs24gc29jaWFsIHkgbGEgcHJvdGVjY2nDs24gZGVsIG1lZGlvIGFtYmllbnRlLiIpXSldKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX3RleHRvIn0sW19jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiQW5leG8uICIpXSksX3ZtLl92KCIgRWplbXBsb3MgZGVzdGFjYWRvcyBkZSBpbXBsZW1lbnRhY2nDs24gZW4gbGEgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBFbXByZXNhcmlhbCAoUlNFKS4iKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSBvcmRlci0xIG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTcucG5nIiksImFsdCI6IiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC1tZC02IGNvbC1sZy0zIG9mZnNldC1sZy0xIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZyIpLCJhbHQiOiIifX0pXSldKX1dCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}